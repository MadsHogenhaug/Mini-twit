---
name: Continuous Deployment

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:


jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push Minitwit
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/itu-minitwit:latest
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/itu-minitwit:webbuildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/itu-minitwit:webbuildcache,mode=max

      - name: Build and push Minitwit API
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile.api
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/itu-minitwit-api:latest
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/itu-minitwit-api:apibuildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/itu-minitwit-api:apibuildcache,mode=max

      - name: Build and push Minitwit DB
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile.pg
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/itu-minitwit-db:latest
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/itu-minitwit-db:apibuildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/itu-minitwit-db:apibuildcache,mode=max

      - name: SSHing and Deploying
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.KEY }}
          script_stop: true
          command_timeout: 200m
          script: |
            cd MiniTwit
            docker-compose -f compose.prod.yaml pull
            docker-compose -f compose.prod.yaml up -d
        
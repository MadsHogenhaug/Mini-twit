name: Deploy

on:
  push:
    branches: [ "main" ]
    paths:
      - 'app/**'
      - 'API/**'
      - 'utils/**'
      - 'terraform/**'
      - 'compose/**'
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Run cp_shrd.sh
        run: bash cp_shrd.sh

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push Minitwit
        uses: docker/build-push-action@v2
        with:
          context: ./app
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/minitwit:latest
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/minitwit:webbuildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/minitwit:webbuildcache,mode=max

      - name: Build and push Minitwit API
        uses: docker/build-push-action@v2
        with:
          context: ./API
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/minitwit-api:latest
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/minitwit-api:apibuildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/minitwit-api:apibuildcache,mode=max

      - name: Setup Secrets
        run: |
          mkdir secrets
          echo "DB_CONNECTION_TYPE=prod" >> secrets/db_secrets.env
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> secrets/db_secrets.env
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> secrets/db_secrets.env
          echo "POSTGRES_HOST=${{ secrets.POSTGRES_HOST }}" >> secrets/db_secrets.env
          echo "POSTGRES_PORT=${{ secrets.POSTGRES_PORT }}" >> secrets/db_secrets.env
          echo "POSTGRES_NAME=${{ secrets.POSTGRES_NAME }}" >> secrets/db_secrets.env
          echo "${{ secrets.CA_CERTIFICATE }}" > secrets/ca-certificate.crt
          mkdir ssh_key
          echo "${{ secrets.TERRAFORM }}" > ssh_key/terraform
          echo "${{ secrets.TERRAFORM_PUB }}" > ssh_key/terraform.pub
          cp -r ssh_key terraform

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.3

      - name: Run Terraform init
        run: |
          terraform -chdir=./terraform init \
              -backend-config "bucket=${{ secrets.SPACE_NAME }}" \
              -backend-config "key=${{ secrets.STATE_FILE }}" \
              -backend-config "access_key=${{ secrets.AWS_ACCESS_KEY_ID }}" \
              -backend-config "secret_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}"

      - name: output raw swarm leader ip
        run: |
          echo "swarm_leader_ip=$(terraform -chdir=./terraform output -raw minitwit-swarm-leader-ip-address)" >> $GITHUB_ENV

      - name: Set permissions for SSH key
        run: chmod 600 ssh_key/terraform
        
      - name: Get IP Addresses
        id: get_ips
        run: |
          leader_ip=$(terraform -chdir=./terraform output -raw minitwit-swarm-leader-ip-address)
          manager_ips=$(terraform -chdir=./terraform output -json minitwit-swarm-manager-ip-address | jq -r '.[]' | paste -sd "," -)
          worker_ips=$(terraform -chdir=./terraform output -json minitwit-swarm-worker-ip-address | jq -r '.[]' | paste -sd "," -)
  
          echo "leader_ip=$leader_ip" >> $GITHUB_ENV
          echo "manager_ips=$manager_ips" >> $GITHUB_ENV
          echo "worker_ips=$worker_ips" >> $GITHUB_ENV
  
      - name: Copy files to all nodes
        run: |
          IFS=',' read -r -a manager_ips <<< "$manager_ips"
          IFS=',' read -r -a worker_ips <<< "$worker_ips"
          all_ips=("$leader_ip" "${manager_ips[@]}" "${worker_ips[@]}")
          for ip in "${all_ips[@]}"; do
            echo -e "\n--> Copying secrets to $ip\n"
            scp -i ssh_key/terraform -o StrictHostKeyChecking=no -r secrets root@$ip:/root
          done

      - name: Deploy stack on swarm leader
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ env.leader_ip }}
          username: root
          key: ${{ secrets.TERRAFORM }}
          script_stop: true
          command_timeout: 2000m
          script: |
            docker pull jeffjeffersonthe2nd/minitwit:latest
            docker pull jeffjeffersonthe2nd/minitwit-api:latest

            docker service update --image jeffjeffersonthe2nd/minitwit:latest minitwit_minitwit
            docker service update --image jeffjeffersonthe2nd/minitwit-api:latest minitwit_minitwit-api

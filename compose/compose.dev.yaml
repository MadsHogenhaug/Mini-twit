services:
  minitwit:
    container_name: MiniTwit
    image: minitwit:latest
    ports: 
      - "5000:5000"
    env_file:
      - dev.env
    networks:
      - prom_net
      - db_net
    depends_on:
      db:
        condition: service_healthy

  minitwit-api:
    container_name: API
    image: minitwit-api:latest
    ports:
      - "5001:5001"
    env_file:
      - dev.env
    networks:
      - prom_net
      - db_net
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:alpine3.19
    env_file:
      - dev.env
    volumes:
      - ../utils/schema_postgres.sql:/docker-entrypoint-initdb.d/schema_postgres.sql 
    ports:
      - "5432:5432"
    networks:
      - db_net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 3s
      timeout: 3s
      retries: 3

networks:
  db_net:
    name: db_net
    driver: bridge
    
  prom_net:
    name: prom_net
    driver: bridge